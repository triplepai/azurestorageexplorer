<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>netcoreapp3.1</TargetFramework>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
    <IsPackable>false</IsPackable>
    <SpaRoot>ClientApp\</SpaRoot>
    <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>

    <!-- Set this to true if you enable server-side prerendering -->
    <BuildServerSideRenderer>false</BuildServerSideRenderer>
    <PackageId>AzureStorageWebExplorer</PackageId>
    <AssemblyVersion>2.0.1</AssemblyVersion>
    <FileVersion>2.0.1</FileVersion>
    <Authors>Sebastián Gómez</Authors>
    <Product>Azure Storage web explorer</Product>
    <Copyright>(C) 2020 @sebagomez. All rights reserved.</Copyright>
    <RepositoryUrl>https://github.com/sebagomez/azurestorageexplorer</RepositoryUrl>
    <RepositoryType>git</RepositoryType>
    <PackageIcon>favicon.ico</PackageIcon>
    <PackageIconUrl />
    <PackageTags>azure,azure-storage,azure-blobs,azure-queues,azure-tables,azure-files</PackageTags>
    <Version>2.0.1</Version>
    <PackageProjectUrl>https://azurestorage.azurewebsites.net</PackageProjectUrl>
    <Description>Manage your Azure Storage blobs, tables, queues and file shares from this simple and intuitive web application</Description>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="3.1.3" />
    <PackageReference Include="WindowsAzure.Storage" Version="9.3.3" />
  </ItemGroup>

  <ItemGroup>
    <!-- Don't publish the SPA source files, but do show them in the project files list -->
    <Content Remove="$(SpaRoot)**" />
    <None Remove="$(SpaRoot)**" />
    <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
    <None Include="wwwroot\favicon.ico">
      <Pack>True</Pack>
      <PackagePath></PackagePath>
    </None>
  </ItemGroup>

  <ItemGroup>
    <None Remove="ClientApp\src\app\base\base.component.ts" />
    <None Remove="ClientApp\src\app\blobs\blobs.component.ts" />
    <None Remove="ClientApp\src\app\containers\containers.component.ts" />
    <None Remove="ClientApp\src\app\localfiles\localfiles.component.ts" />
    <None Remove="ClientApp\src\app\login\login.component.ts" />
    <None Remove="ClientApp\src\app\qmessages\qmessages.component.ts" />
    <None Remove="ClientApp\src\app\queues\queues.component.ts" />
    <None Remove="ClientApp\src\app\tabledata\tabledata.component.ts" />
    <None Remove="ClientApp\src\app\tables\tables.component.ts" />
    <None Remove="ClientApp\src\app\version\version.component.ts" />
    <None Remove="ClientApp\src\azurewebexplorer.css" />
  </ItemGroup>

  <ItemGroup>
    <Content Include="ClientApp\src\azurewebexplorer.css">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
      <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
    </Content>
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\StorageLibrary\StorageLibrary.csproj" />
  </ItemGroup>

  <ItemGroup>
    <TypeScriptCompile Include="ClientApp\src\app\base\base.component.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\blobs\blobs.component.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\containers\containers.component.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\localfiles\localfiles.component.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\login\login.component.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\qmessages\qmessages.component.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\queues\queues.component.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\tabledata\tabledata.component.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\tables\tables.component.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\version\version.component.ts" />
  </ItemGroup>

  <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
    <!-- Ensure Node.js is installed -->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
    <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
  </Target>

  <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build -- --prod" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build:ssr -- --prod" Condition=" '$(BuildServerSideRenderer)' == 'true' " />

    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="$(SpaRoot)dist\**; $(SpaRoot)dist-server\**" />
      <DistFiles Include="$(SpaRoot)node_modules\**" Condition="'$(BuildServerSideRenderer)' == 'true'" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>%(DistFiles.Identity)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
        <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>

</Project>
